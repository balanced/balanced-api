require:
  - ../card_fixtures.yml
scenarios:
  - name: retrieve_card
    request:
      method: GET
      href: "{card,cards.href}"
    response:
      schema:
        "$ref": "responses/cards.json"
      status_code: 200
      matches: {"cards": [{
        "name": null,
        "number": "xxxxxxxxxxxx1111",
        "expiration_month": 12,
        "expiration_year": 2016,
        "cvv": xxx,
        "cvv_match": "yes",
        "cvv_result": "Match",
        "address": {
          "line1": null,
          "line2": null,
          "city": null,
          "state": null,
          "postal_code": null,
          "country_code": null
        },
        "avs_street_match": unsupported,
        "avs_postal_match": "yes",
        "avs_result": "Postal code matches, but street address not verified.",
        "brand": "Visa",
        "meta": {}
      }]}

  - name: expiration_string
    request:
      method: POST
      href: /cards
      schema:
        "$ref": "requests/card.json"
      body: {
        "number": "4111 1111 1111 1111",
        "expiration_month": "12",
        "expiration_year": "2016"
      }
    response:
      schema:
        "$ref": "responses/cards.json"
      status_code: 201
      matches: {"cards": [{
        "expiration_month": 12,
        "expiration_year": 2016
      }]}

  - name: cardholder_name
    request:
      method: POST
      href: /cards
      schema:
        "$ref": "requests/card.json"
      body: {
        "name": "Frida Kahlo",
        "number": "4111 1111 1111 1111",
        "expiration_month": 12,
        "expiration_year": 2016
      }
    response:
      schema:
        "$ref": "responses/cards.json"
      status_code: 201
      matches: {"cards": [{"name": "Frida Kahlo"}]}

  - name: cardholder_address
    request:
      method: POST
      href: /cards
      schema:
        "$ref": "requests/card.json"
      body: {
        "number": "4111 1111 1111 1111",
        "expiration_month": 12,
        "expiration_year": 2016,
        "address": {
          "line1": "7 Bis Rue de l'Abbé de l'Épée",
          "line2": "Apt 4",
          "city": "Versailles",
          "postal_code": "78000",
          "country_code": "FR"
        }
      }
    response:
      schema:
        "$ref": "responses/cards.json"
      status_code: 201
      matches: {
        "cards": [{
          "address": {
            "line1": "7 Bis Rue de l'Abbé de l'Épée",
            "line2": "Apt 4",
            "city": "Versailles",
            "state": null,
            "postal_code": "78000",
            "country_code": "FR"
          }
        }]
     }

  - name: fails_luhn
    request:
      method: POST
      href: /cards
      schema:
        "$ref": "requests/card.json"
      body: {
        "number": "4111 1111 1111 1112",
        "expiration_month": 12,
        "expiration_year": 2016
      }
    response:
      schema:
        "$ref": "responses/errors.json"
      status_code: 409
      matches: { "category_code": "card-not-validated" }
      assertRegex: { "description": "^Card cannot be validated" }

  - name: unstore_card
    request:
      method: DELETE
      href: "{card,cards.href}"
    response:
      status_code: 204
